#!/bin/bash

source config.sh
source curl_errors.sh


test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - CNCPO PEC Checking Started" >> $LOGFILE

cd $CNCPO_WORKING_DIR

# generating new setting file
cp $CNCPO_SETTINGS_TMPL settings.yaml

VARS=$(set | grep CNCPO | cut -d= -f1)
for var in $VARS ; do
	VALUE=$(echo ${!var} | sed 's/\//\\\//g' )
	sed -i "s/${var}/$VALUE/g" settings.yaml
done

# Running the Fetcher

python $CNCPO_DOWNLOAD_HELPER &>> $LOGFILE
if [ $? != 0 ] ; then
	SUBJECT="Error while fetching CNCPO lists"
	TXT='Unable to check PEC Mailbox'
	if [ $ALERT_ENABLE == true ] && [ "x$NOC_EMAIL" != 'x' ] ; then
				echo -e "Subject: $SUBJECT\nFrom:$FROM_EMAIL\n$TXT" | sendmail $NOC_EMAIL
	fi
	test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - CNCPO Error: $TXT" >> $LOGFILE
	echo "Warning: $TXT" >&2
	exit 255
else
	test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - Successfully checked CNCPO lists" >> $LOGFILE
fi	
###############################

#################################
if [ -e $CNCPO_DOWNLOAD_DIR/$CNCPO_FILE_NAME_CRYPT ] ; then 
	
	# import key
	if [ $GPG_IMPORT_KEY == true ] ; then 
		test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - CNCPO Key Import Started" >> $LOGFILE
		$CNCPO_GPG_PATH --batch --passphrase $GPG_KEY_PASSWORD --import $GPG_PRIVATE_KEY &>> $LOGFILE
		if [ $? != 0 ] ; then
			SUBJECT="Error while importing GPG Keyfile $GPG_PRIVATE_KEY"
			TXT='Unable to import GPG Keyfile $GPG_PRIVATE_KEY'
			if [ $ALERT_ENABLE == true ] && [ "x$NOC_EMAIL" != 'x' ] ; then
						echo -e "Subject: $SUBJECT\nFrom:$FROM_EMAIL\n$TXT" | sendmail $NOC_EMAIL
			fi
			test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - CNCPO Error: $TXT" >> $LOGFILE
			echo "Warning: $TXT" >&2
			exit 255
		fi
	fi
	
	# decrypt
	$CNCPO_GPG_PATH --batch --passphrase $GPG_KEY_PASSWORD --decrypt $CNCPO_DOWNLOAD_DIR/$CNCPO_FILE_NAME_CRYPT -o $CNCPO_DOWNLOAD_DIR/$CNCPO_FILE_NAME_DECRYPT
	if [ $? != 0 ] ; then
		SUBJECT="Error while decrypting list"
		TXT='Unable to decrypt file $CNCPO_FILE_NAME_CRYPT with GPG Keyfile $GPG_PRIVATE_KEY'
		if [ $ALERT_ENABLE == true ] && [ "x$NOC_EMAIL" != 'x' ] ; then
					echo -e "Subject: $SUBJECT\nFrom:$FROM_EMAIL\n$TXT" | sendmail $NOC_EMAIL
		fi
		test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - CNCPO Error: $TXT" >> $LOGFILE
		echo "Warning: $TXT" >&2
		exit 255
	else
		test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - Successfully decrypted CNCPO lists" >> $LOGFILE
	fi
	
	# copy files 
	mv $CNCPO_DOWNLOAD_DIR/$CNCPO_FILE_NAME_DECRYPT $FILE_cncpo
	
	
	# Parse header for answer
	LISTAID=$(head -1 $FILE_cncpo)
	
	
	# answer
	if [ $CNCPO_REPLY_ENABLED == true ] ; then 
		# TODO: INSERT LISTAID
		echo "$CNCPO_REPLY_TEMPLATE" | sed "s/_LISTAID_/$LISTAID/g" | sed "s/_DATE_/$(date)/g" | python $CNCPO_EMAIL_SENDER
		
		if [ $? != 0 ] ; then
			SUBJECT="Error while sending reply message to CNCPO"
			TXT="Unable to send reply message to $CNCPO_REPLY_DESTINATION"
			if [ $ALERT_ENABLE == true ] && [ "x$NOC_EMAIL" != 'x' ] ; then
						echo -e "Subject: $SUBJECT\nFrom:$FROM_EMAIL\n$TXT" | sendmail $NOC_EMAIL
			fi
			test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - CNCPO Error: $TXT" >> $LOGFILE
			echo "Warning: $TXT" >&2
			exit 255
		else
			test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - Successfully Sent CNCPO PEC Reply" >> $LOGFILE
		fi
	fi
	
else
	# nothing new to do
	test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - No new lists found." >> $LOGFILE
	
fi


cd ..
## parsing ###################################################################
test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - CNCPO Parsing Started" >> $LOGFILE
./parse_cncpo $FILE_cncpo lists/cncpo.new lists/cncpo-ip.new 2>&1 | tee -a $LOGFILE
if [ $? == 0 ] ; then
	test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - CNCPO Parsing Completed" >> $LOGFILE
else
	test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - Error while Parsing CNCPO Lists" >> $LOGFILE
fi


test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - Successfully downloaded CNCPO lists" >> $LOGFILE








